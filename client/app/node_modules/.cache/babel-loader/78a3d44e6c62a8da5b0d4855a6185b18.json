{"ast":null,"code":"var _jsxFileName = \"/Users/roymosby/Desktop/CapstoneProject/skilledge/client/app/src/SleepReporter.js\";\nimport React from 'react';\nexport class SleepReporter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ADD_SLEEP_REPORT_URL = process.env.REACT_APP_BACKEND_URL + \"/users/sleep-reports\";\n    this.PATCH_SLEEP_REPORT_URL = process.env.REACT_APP_BACKEND_URL + \"/users/sleep-reports\";\n    this.poor = this.poor.bind(this);\n    this.average = this.average.bind(this);\n    this.great = this.great.bind(this);\n  }\n\n  poor() {\n    this.handleReport(1, () => {\n      this.props.sleepUpdated();\n    });\n  }\n\n  average() {\n    this.handleReport(2, () => {\n      this.props.sleepUpdated();\n    });\n  }\n\n  great() {\n    this.handleReport(3, () => {\n      this.props.sleepUpdated();\n    });\n  }\n\n  handleReport(value, fetchCallback) {\n    if (this.props.currentSleepReport.length === 0) {\n      this.addReport(value, fetchCallback);\n    } else {\n      this.editReport(value, fetchCallback);\n    }\n  }\n\n  addReport(value, fetchCallback) {\n    const newReport = {\n      sleepreportdate: this.props.currentDate,\n      sleepvalueid: value\n    };\n    fetch(this.ADD_SLEEP_REPORT_URL, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newReport)\n    }).then(this.checkStatus).then(fetchCallback).catch(this.displayError);\n  }\n\n  editReport(value, fetchCallback) {\n    const updatedReport = {\n      sleepreportid: this.props.currentSleepReport[0].SleepReportID,\n      sleepvalueid: value\n    };\n    fetch(this.PATCH_SLEEP_REPORT_URL, {\n      method: 'PATCH',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedReport)\n    }).then(this.checkStatus).then(fetchCallback).catch(this.displayError);\n  }\n\n  render() {\n    let currentStatus = \"Pending\";\n\n    if (this.props.currentSleepReport && this.props.currentSleepReport.length > 0) {\n      currentStatus = this.props.currentSleepReport[0].SleepValueName;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Sleep for \", this.props.currentDate), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, \"Current Status: \", currentStatus, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 64\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger mr-1\",\n      onClick: this.poor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, \"Poor\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary mr-1\",\n      onClick: this.average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"Average\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success mr-1\",\n      onClick: this.great,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, \"Great\")))));\n  }\n\n}\nexport default SleepReporter;","map":{"version":3,"sources":["/Users/roymosby/Desktop/CapstoneProject/skilledge/client/app/src/SleepReporter.js"],"names":["React","SleepReporter","Component","constructor","props","ADD_SLEEP_REPORT_URL","process","env","REACT_APP_BACKEND_URL","PATCH_SLEEP_REPORT_URL","poor","bind","average","great","handleReport","sleepUpdated","value","fetchCallback","currentSleepReport","length","addReport","editReport","newReport","sleepreportdate","currentDate","sleepvalueid","fetch","method","credentials","headers","body","JSON","stringify","then","checkStatus","catch","displayError","updatedReport","sleepreportid","SleepReportID","render","currentStatus","SleepValueName"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport class SleepReporter extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.ADD_SLEEP_REPORT_URL = process.env.REACT_APP_BACKEND_URL + \"/users/sleep-reports\";\n        this.PATCH_SLEEP_REPORT_URL = process.env.REACT_APP_BACKEND_URL + \"/users/sleep-reports\";\n        this.poor = this.poor.bind(this);\n        this.average = this.average.bind(this);\n        this.great = this.great.bind(this);\n    }\n\n    poor() {\n        this.handleReport(1, () => {\n            this.props.sleepUpdated();\n        });\n    };\n\n    average() {\n        this.handleReport(2, () => {\n            this.props.sleepUpdated();\n        });\n    };\n\n    great() {\n        this.handleReport(3, () => {\n            this.props.sleepUpdated();\n        });\n    };\n\n    handleReport(value, fetchCallback) {\n        if (this.props.currentSleepReport.length === 0) {\n            this.addReport(value, fetchCallback);\n        } else {\n            this.editReport(value, fetchCallback)\n        }\n    }\n\n    addReport(value, fetchCallback) {\n        const newReport = {\n            sleepreportdate: this.props.currentDate,\n            sleepvalueid: value\n        }\n\n        fetch(this.ADD_SLEEP_REPORT_URL, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newReport)\n        })\n            .then(this.checkStatus)\n            .then(fetchCallback)\n            .catch(this.displayError);\n    }\n\n    editReport(value, fetchCallback) {\n        const updatedReport = {\n            sleepreportid: this.props.currentSleepReport[0].SleepReportID,\n            sleepvalueid: value\n        }\n\n        fetch(this.PATCH_SLEEP_REPORT_URL, {\n            method: 'PATCH',\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(updatedReport)\n        })\n            .then(this.checkStatus)\n            .then(fetchCallback)\n            .catch(this.displayError);\n    }\n\n    render() {\n\n        let currentStatus = \"Pending\";\n\n        if (this.props.currentSleepReport && this.props.currentSleepReport.length > 0) {\n            currentStatus = this.props.currentSleepReport[0].SleepValueName;\n        }\n\n        return (\n            <div>\n                <h3 className=\"card-header\">Sleep for {this.props.currentDate}</h3>\n                <div className=\"card-body\">\n                    <div>\n                        <div className=\"card-text\">\n                            <p>\n                                Current Status: {currentStatus}<br />\n                            </p>\n                        </div>\n                        <div>\n                            <button className=\"btn btn-danger mr-1\" onClick={this.poor}>\n                                Poor\n                            </button>\n                            <button className=\"btn btn-primary mr-1\" onClick={this.average}>\n                                Average\n                            </button>\n                            <button className=\"btn btn-success mr-1\" onClick={this.great}>\n                                Great\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default SleepReporter;"]},"metadata":{},"sourceType":"module"}