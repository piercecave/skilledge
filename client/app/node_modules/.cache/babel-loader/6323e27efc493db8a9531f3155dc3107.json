{"ast":null,"code":"var _jsxFileName = \"/Users/roymosby/Desktop/CapstoneProject/skilledge/client/app/src/Record.js\";\nimport React from 'react';\nimport './Record.css';\nimport Event from './Event';\nimport FailureReasonsForm from './FailureReasonsForm';\nimport anime from 'animejs/lib/anime.es';\nexport class Record extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.formatDate = currentDate => {\n      var newYear = currentDate.getFullYear();\n      var newMonth = currentDate.getMonth() + 1;\n      var newDate = currentDate.getDate();\n      if (newMonth < 10) newMonth = \"0\" + newMonth;\n      if (newDate < 10) newDate = \"0\" + newDate;\n      return newYear + \"-\" + newMonth + \"-\" + newDate;\n    };\n\n    this.previousDay = this.previousDay.bind(this);\n    this.nextDay = this.nextDay.bind(this);\n    this.queryReasons = this.queryReasons.bind(this);\n    this.restore = this.restore.bind(this);\n    this.handleFailure = this.handleFailure.bind(this);\n    this.handleSuccess = this.handleSuccess.bind(this);\n    this.MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    this.state = {\n      currentStep: 0,\n      selectedEvent: {}\n    };\n  } // componentDidMount() {\n  //   this.loadEvents();\n  // }\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.currentDate !== prevProps.currentDate) {\n  //     this.loadEvents();\n  //   }\n  // }\n  // displayError = (error) => {\n  //   console.log(error);\n  // }\n\n\n  // checkStatus = (response) => {\n  //   if (response.status >= 200 && response.status < 300) {\n  //     return response;\n  //   } else {\n  //     return Promise.reject(new Error(response.status + \": \" + response.statusText));\n  //   }\n  // }\n  previousDay() {\n    this.props.previousDay();\n  }\n\n  nextDay() {\n    this.props.nextDay();\n  }\n\n  queryReasons() {\n    this.setState({\n      currentStep: 1\n    }, () => {\n      this.setProcessStep();\n    });\n  }\n\n  restore() {\n    this.setState({\n      currentStep: 0\n    }, () => {\n      this.setProcessStep();\n      this.props.eventUpdated();\n    });\n  }\n\n  setProcessStep() {\n    console.log(\"Running\");\n    var cardsXPosition = this.state.currentStep * -1 * 112.5;\n    return anime({\n      targets: '.eventStepBox',\n      // Properties \n      translateX: cardsXPosition + \"%\",\n      // Property Parameters\n      duration: 500,\n      easing: 'linear' // Animation Parameters\n\n    });\n  }\n\n  handleFailure(event) {\n    this.setState({\n      selectedEvent: event\n    }, () => {\n      this.queryReasons();\n      this.props.eventUpdated();\n    });\n  }\n\n  handleSuccess(event) {\n    this.props.eventUpdated();\n  }\n\n  render() {\n    let eventsToShow = /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 24\n      }\n    }, \"No events for today!\");\n\n    if (this.props.events && this.props.events.length > 0) {\n      eventsToShow = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, \"Planned Events:\"), this.props.events.map((event, index) => /*#__PURE__*/React.createElement(Event, {\n        key: index,\n        event: event,\n        onFailure: this.handleFailure,\n        onSuccess: this.handleSuccess,\n        eventUpdated: this.props.eventUpdated,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"Record Your Progress!\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body record-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eventStepBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"date-pick\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"prevDateButton\",\n      className: \"btn btn-success\",\n      onClick: this.previousDay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 98\n      }\n    }, \"<\")), /*#__PURE__*/React.createElement(\"h4\", {\n      id: \"currentDateLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, this.formatDate(this.props.currentDate)), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"nextDateButton\",\n      className: \"btn btn-success\",\n      onClick: this.nextDay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 94\n      }\n    }, \">\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"eventsContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, eventsToShow)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eventStepBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FailureReasonsForm, {\n      event: this.state.selectedEvent,\n      onFinished: this.restore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\nexport default Record;","map":{"version":3,"sources":["/Users/roymosby/Desktop/CapstoneProject/skilledge/client/app/src/Record.js"],"names":["React","Event","FailureReasonsForm","anime","Record","Component","constructor","props","formatDate","currentDate","newYear","getFullYear","newMonth","getMonth","newDate","getDate","previousDay","bind","nextDay","queryReasons","restore","handleFailure","handleSuccess","MONTHS","state","currentStep","selectedEvent","setState","setProcessStep","eventUpdated","console","log","cardsXPosition","targets","translateX","duration","easing","event","render","eventsToShow","events","length","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Record.css';\nimport Event from './Event';\nimport FailureReasonsForm from './FailureReasonsForm';\nimport anime from 'animejs/lib/anime.es';\n\nexport class Record extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.previousDay = this.previousDay.bind(this);\n    this.nextDay = this.nextDay.bind(this);\n    this.queryReasons = this.queryReasons.bind(this);\n    this.restore = this.restore.bind(this);\n    this.handleFailure = this.handleFailure.bind(this);\n    this.handleSuccess = this.handleSuccess.bind(this);\n\n    this.MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n    this.state = {\n      currentStep: 0,\n      selectedEvent: {}\n    }\n  }\n\n  // componentDidMount() {\n  //   this.loadEvents();\n  // }\n\n  // componentDidUpdate(prevProps) {\n  //   if (this.props.currentDate !== prevProps.currentDate) {\n  //     this.loadEvents();\n  //   }\n  // }\n\n  // displayError = (error) => {\n  //   console.log(error);\n  // }\n\n  formatDate = (currentDate) => {\n    var newYear = currentDate.getFullYear();\n    var newMonth = currentDate.getMonth() + 1;\n    var newDate = currentDate.getDate();\n    if (newMonth < 10) newMonth = \"0\" + newMonth;\n    if (newDate < 10) newDate = \"0\" + newDate;\n    return newYear + \"-\" + newMonth + \"-\" + newDate;\n  }\n\n  // checkStatus = (response) => {\n  //   if (response.status >= 200 && response.status < 300) {\n  //     return response;\n  //   } else {\n  //     return Promise.reject(new Error(response.status + \": \" + response.statusText));\n  //   }\n  // }\n\n  previousDay() {\n    this.props.previousDay();\n  }\n\n  nextDay() {\n    this.props.nextDay();\n  }\n\n  queryReasons() {\n    this.setState({\n      currentStep: 1\n    }, () => {\n      this.setProcessStep();\n    });\n  }\n\n  restore() {\n    this.setState({\n      currentStep: 0\n    }, () => {\n      this.setProcessStep();\n      this.props.eventUpdated();\n    });\n  }\n\n  setProcessStep() {\n    console.log(\"Running\")\n\n    var cardsXPosition = this.state.currentStep * -1 * 112.5;\n\n    return anime({\n      targets: '.eventStepBox',\n      // Properties \n      translateX: cardsXPosition + \"%\",\n      // Property Parameters\n      duration: 500,\n      easing: 'linear',\n      // Animation Parameters\n    });\n  }\n\n  handleFailure(event) {\n    this.setState({\n      selectedEvent: event\n    }, () => {\n      this.queryReasons();\n      this.props.eventUpdated();\n    });\n  }\n\n  handleSuccess(event) {\n    this.props.eventUpdated();\n  }\n\n  render() {\n\n    let eventsToShow = <h5>No events for today!</h5>;\n\n    if (this.props.events && this.props.events.length > 0) {\n      eventsToShow = (\n        <div>\n          <h5>Planned Events:</h5>\n          {this.props.events.map((event, index) => (\n            <Event key={index} event={event} onFailure={this.handleFailure} onSuccess={this.handleSuccess} eventUpdated={this.props.eventUpdated} />\n          ))}\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <h3 className=\"card-header\">Record Your Progress!</h3>\n        <div className=\"card-body record-body\">\n          <div className=\"eventStepBox\">\n            <div id=\"date-pick\">\n              <button id=\"prevDateButton\" className=\"btn btn-success\" onClick={this.previousDay}><strong>&lt;</strong></button>\n              <h4 id=\"currentDateLabel\">{this.formatDate(this.props.currentDate)}</h4>\n              <button id=\"nextDateButton\" className=\"btn btn-success\" onClick={this.nextDay}><strong>&gt;</strong></button>\n            </div>\n            <div id=\"eventsContainer\">\n              {eventsToShow}\n            </div>\n          </div>\n          <div className=\"eventStepBox\">\n            <FailureReasonsForm event={this.state.selectedEvent} onFinished={this.restore} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Record;"]},"metadata":{},"sourceType":"module"}