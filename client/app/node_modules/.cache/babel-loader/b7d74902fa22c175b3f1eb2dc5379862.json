{"ast":null,"code":"var _jsxFileName = \"/Users/roymosby/Desktop/CapstoneProject/skilledge/client/app/src/DashboardHeader.js\";\nimport React from 'react';\nimport './DashboardHeader.css';\nimport ToDoItem from './ToDoItem';\nexport default class DashboardHeader extends React.Component {\n  toDoItems() {\n    let toDoItemElements = [];\n    toDoItemElements.push( /*#__PURE__*/React.createElement(ToDoItem, {\n      key: 0,\n      content: \"Reported success or failure for all events today\",\n      complete: this.checkCurrentEventsReported(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }));\n    toDoItemElements.push( /*#__PURE__*/React.createElement(ToDoItem, {\n      key: 1,\n      content: \"Reported your sleep for the day\",\n      complete: this.checkSleepReported(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }));\n    toDoItemElements.push( /*#__PURE__*/React.createElement(ToDoItem, {\n      key: 2,\n      content: \"Reported your overall mood for the day\",\n      complete: this.checkMoodReported(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }));\n    return toDoItemElements;\n  }\n\n  checkCurrentEventsReported() {\n    let todaysEventsWithNoResultsData = this.props.eventsData;\n\n    if (todaysEventsWithNoResultsData) {\n      todaysEventsWithNoResultsData = todaysEventsWithNoResultsData.filter(event => {\n        return event.FormattedEventDate === this.props.currentDate && event.ResultID !== 1;\n      });\n\n      if (todaysEventsWithNoResultsData.length === 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  checkSleepReported() {\n    if (this.props.currentSleepReport.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  checkMoodReported() {\n    if (this.props.currentMoodReport.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getCurrentEvents() {\n    return this.props.eventsData;\n  }\n\n  render() {\n    // If already filed out, grab current skills from the backend. Function is called \n    // Find the collaspsable portion of userdashboard. Lost in merge. \n    // Pass current date and state of user into dashboard header.\n    // Check if user has event was it a success or failure. If they haven't reported yet ask them to. \n    // Repeat this process for sleep and info. \n    //\n    // Pierce will grab the individual user skill and habit. \n    // Build out the sleep info.\n    // Build out the mood info.\n    // Possibilty of adding kitten to the header pane. \n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      id: \"headingOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-10 mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, \"Hello, \", this.props.userInfo.FirstName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-link float-right plus-button\",\n      \"data-toggle\": \"collapse\",\n      \"data-target\": \"#collapseOne\",\n      \"aria-expanded\": \"true\",\n      \"aria-controls\": \"collapseOne\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, \"\\u271A\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"collapseOne\",\n      className: \"collapse show\",\n      \"aria-labelledby\": \"headingOne\",\n      \"data-parent\": \"#accordion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, this.toDoItems()))));\n  }\n\n}","map":{"version":3,"sources":["/Users/roymosby/Desktop/CapstoneProject/skilledge/client/app/src/DashboardHeader.js"],"names":["React","ToDoItem","DashboardHeader","Component","toDoItems","toDoItemElements","push","checkCurrentEventsReported","checkSleepReported","checkMoodReported","todaysEventsWithNoResultsData","props","eventsData","filter","event","FormattedEventDate","currentDate","ResultID","length","currentSleepReport","currentMoodReport","getCurrentEvents","render","userInfo","FirstName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './DashboardHeader.css';\nimport ToDoItem from './ToDoItem';\n\nexport default class DashboardHeader extends React.Component {\n\n    toDoItems() {\n        let toDoItemElements = [];\n\n        toDoItemElements.push((\n            <ToDoItem\n                key={0}\n                content={\"Reported success or failure for all events today\"}\n                complete={this.checkCurrentEventsReported()} />\n        ));\n\n        toDoItemElements.push((\n            <ToDoItem\n                key={1}\n                content={\"Reported your sleep for the day\"}\n                complete={this.checkSleepReported()} />\n        ));\n\n        toDoItemElements.push((\n            <ToDoItem\n                key={2}\n                content={\"Reported your overall mood for the day\"}\n                complete={this.checkMoodReported()} />\n        ));\n\n        return toDoItemElements;\n    }\n\n    checkCurrentEventsReported() {\n        let todaysEventsWithNoResultsData = this.props.eventsData;\n        if (todaysEventsWithNoResultsData) {\n            todaysEventsWithNoResultsData = todaysEventsWithNoResultsData.filter((event) => {\n                return event.FormattedEventDate === this.props.currentDate && event.ResultID !== 1;\n            });\n            if (todaysEventsWithNoResultsData.length === 0) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    checkSleepReported() {\n        if (this.props.currentSleepReport.length === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    checkMoodReported() {\n        if (this.props.currentMoodReport.length === 0) {\n            return false;\n        }\n        return true;\n    }\n\n    getCurrentEvents() {\n        return this.props.eventsData;\n    }\n\n    render() {\n\n        // If already filed out, grab current skills from the backend. Function is called \n        // Find the collaspsable portion of userdashboard. Lost in merge. \n        // Pass current date and state of user into dashboard header.\n        // Check if user has event was it a success or failure. If they haven't reported yet ask them to. \n        // Repeat this process for sleep and info. \n        //\n        // Pierce will grab the individual user skill and habit. \n        // Build out the sleep info.\n        // Build out the mood info.\n        // Possibilty of adding kitten to the header pane. \n\n        return (\n            <div>\n                <div id=\"accordion\">\n                    <div className=\"card-header\" id=\"headingOne\">\n                        <div className=\"container-fluid p-0\">\n                            <div className=\"row\">\n                                <div className=\"col-10 mt-1\">\n                                    <h3>Hello, {this.props.userInfo.FirstName}</h3>\n                                </div>\n                                <div className=\"col-2\">\n                                    <button className=\"btn btn-link float-right plus-button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                                        &#10010;\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n                        <div className=\"card-body\">\n                            {this.toDoItems()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}