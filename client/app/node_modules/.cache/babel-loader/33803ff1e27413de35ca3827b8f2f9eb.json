{"ast":null,"code":"var _jsxFileName = \"/Users/roymosby/Desktop/CapstoneProject/skilledge/client/app/src/CommonReasonsForFailureChart.js\";\nimport React from 'react';\nimport * as d3 from \"d3\";\nexport default class CommonReasonsForFailureChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.GET_EVENTS_FOR_USER_URL = process.env.REACT_APP_BACKEND_URL + \"/users/events\";\n    this.GET_REASONS_URL = process.env.REACT_APP_BACKEND_URL + \"/events/:eventid/reasons\";\n    this.chartContainer = React.createRef();\n    this.state = {\n      reasonsData: [],\n      chartWidth: 400\n    };\n  }\n\n  componentDidMount() {\n    this.loadEvents();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    this.setState({\n      chartWidth: this.chartContainer.current.offsetWidth\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentDidUpdate() {\n    this.clearOldChart();\n    this.createChart();\n  }\n\n  updateDimensions() {\n    this.setState({\n      chartWidth: this.chartContainer.current.offsetWidth\n    });\n  }\n\n  loadEvents() {\n    fetch(this.GET_EVENTS_FOR_USER_URL, {\n      credentials: 'include'\n    }).then(this.checkStatus).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      this.getAllReasonsForAllEvents(responseJSON);\n    }).catch(this.displayError);\n  }\n\n  async getAllReasonsForAllEvents(eventsData) {\n    let reasonsArray = [];\n\n    for (const event of eventsData) {\n      event.Reasons = await this.fetchReasons(event.EventID);\n\n      for (const reason of event.Reasons) {\n        reasonsArray.push(reason);\n      }\n    }\n\n    this.setState({\n      reasonsData: reasonsArray\n    });\n  }\n\n  async fetchReasons(eventid) {\n    return await fetch(this.GET_REASONS_URL.replace(\":eventid\", eventid), {\n      credentials: 'include'\n    }).then(this.checkStatus).then(response => {\n      return response.json();\n    }).catch(this.displayError);\n  }\n\n  createChart() {\n    let chartData = this.parseEventsData();\n    let chartDimensions = this.calculateChartDimensions();\n    let chart = this.createChartElement(chartDimensions);\n    let scales = this.calculateScales(chartData, chartDimensions);\n    this.createXAxis(chart, chartData, chartDimensions, scales.xScale);\n    this.createYAxis(chart, chartData, chartDimensions, scales.yScale);\n    this.createBars(chart, scales, chartData);\n  }\n\n  parseEventsData() {\n    let reasonsData = this.state.reasonsData;\n    reasonsData = reasonsData.reduce((acc, cum) => {\n      if (acc[cum.ReasonName]) {\n        acc[cum.ReasonName] += 1;\n      } else {\n        acc[cum.ReasonName] = 1;\n      }\n\n      return acc;\n    }, {});\n    return reasonsData;\n  }\n\n  calculateChartDimensions() {\n    let margin = this.calcMargins();\n    let width = this.state.chartWidth - margin.left - margin.right;\n    let height = width * .75 - margin.top - margin.bottom;\n\n    if (this.state.chartWidth < 500) {\n      height = width * 1.2 - margin.top - margin.bottom;\n    }\n\n    return {\n      width: width,\n      height: height,\n      margin: margin\n    };\n  }\n\n  calcMargins() {\n    if (this.state.chartWidth < 500) {\n      return {\n        top: 10,\n        right: 60,\n        bottom: 90,\n        left: 45\n      };\n    }\n\n    return {\n      top: 10,\n      right: 60,\n      bottom: 120,\n      left: 60\n    };\n  }\n\n  clearOldChart() {\n    d3.select(\"#failureReasonsChart\").html(\"\");\n  }\n\n  createChartElement(chartDimensions) {\n    return d3.select(\"#failureReasonsChart\").append(\"svg\").attr(\"width\", chartDimensions.width + chartDimensions.margin.left + chartDimensions.margin.right).attr(\"height\", chartDimensions.height + chartDimensions.margin.top + chartDimensions.margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + chartDimensions.margin.left + \",\" + chartDimensions.margin.top + \")\");\n  }\n\n  calculateScales(chartData, chartDimensions) {\n    let xScale = this.createXScale(chartData, chartDimensions);\n    let yScale = this.createYScale(chartData, chartDimensions);\n    let colorScale = this.createColorScale(chartData);\n    return {\n      xScale: xScale,\n      yScale: yScale,\n      colorScale: colorScale\n    };\n  }\n\n  createXScale(data, chartDimensions) {\n    return d3.scaleBand().domain(d3.keys(data)).range([0, chartDimensions.width]).padding(0.1);\n  }\n\n  createYScale(data, chartDimensions) {\n    return d3.scaleLinear().domain([0, d3.max(d3.values(data)) + 1]).nice().range([chartDimensions.height, 0]);\n  }\n\n  createColorScale(data) {\n    return d3.scaleSequential().domain([0, d3.keys(data).length]).interpolator(d3.interpolateViridis);\n  }\n\n  createXAxis(chart, cumulativeEventsData, chartDimensions, xScale) {\n    chart.append(\"g\").attr(\"transform\", \"translate(0,\" + chartDimensions.height + \")\").call(d3.axisBottom(xScale)).selectAll(\"text\").style(\"text-anchor\", \"end\").attr(\"dx\", \"-.8em\").attr(\"dy\", \".15em\").attr(\"font-size\", this.calcXLabelFontSize()).attr(\"transform\", \"rotate(-65)\");\n    this.createXAxisLabel(chart, chartDimensions);\n  }\n\n  calcXLabelFontSize() {\n    if (this.state.chartWidth < 500) {\n      return \"10px\";\n    }\n\n    return \"14px\";\n  }\n\n  createXAxisLabel(chart, chartDimensions) {\n    chart.append(\"text\").attr(\"transform\", \"translate(\" + chartDimensions.width / 2 + \" ,\" + (chartDimensions.height + chartDimensions.margin.top + chartDimensions.margin.bottom - 24) + \")\").style(\"text-anchor\", \"middle\").text(\"Reason\").attr(\"font-size\", this.calcLabelFontSize());\n  }\n\n  createYAxis(chart, chartData, chartDimensions, yScale) {\n    chart.append(\"g\").call(d3.axisLeft(yScale).ticks(d3.max(d3.values(chartData)) + 1));\n    this.createYAxisLabel(chart, chartDimensions);\n  }\n\n  createYAxisLabel(chart, chartDimensions) {\n    chart.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", 0 - chartDimensions.margin.left).attr(\"x\", 0 - chartDimensions.height / 2).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(\"Occurences\").attr(\"font-size\", this.calcLabelFontSize());\n  }\n\n  calcLabelFontSize() {\n    if (this.state.chartWidth < 500) {\n      return \"10px\";\n    }\n\n    return \"16px\";\n  }\n\n  createBars(chart, scales, data) {\n    chart.append(\"g\").selectAll(\"rect\").data(d3.entries(data)).join(\"rect\").attr(\"x\", (d, i) => scales.xScale(d.key)).attr(\"y\", d => scales.yScale(d.value)).attr(\"height\", d => scales.yScale(0) - scales.yScale(d.value)).attr(\"width\", scales.xScale.bandwidth()).attr(\"fill\", (d, i) => scales.colorScale(i));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.chartContainer,\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, \"Most Common Reasons for Failure\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      id: \"failureReasonsChart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/roymosby/Desktop/CapstoneProject/skilledge/client/app/src/CommonReasonsForFailureChart.js"],"names":["React","d3","CommonReasonsForFailureChart","Component","constructor","props","GET_EVENTS_FOR_USER_URL","process","env","REACT_APP_BACKEND_URL","GET_REASONS_URL","chartContainer","createRef","state","reasonsData","chartWidth","componentDidMount","loadEvents","window","addEventListener","updateDimensions","bind","setState","current","offsetWidth","componentWillUnmount","removeEventListener","componentDidUpdate","clearOldChart","createChart","fetch","credentials","then","checkStatus","response","json","responseJSON","getAllReasonsForAllEvents","catch","displayError","eventsData","reasonsArray","event","Reasons","fetchReasons","EventID","reason","push","eventid","replace","chartData","parseEventsData","chartDimensions","calculateChartDimensions","chart","createChartElement","scales","calculateScales","createXAxis","xScale","createYAxis","yScale","createBars","reduce","acc","cum","ReasonName","margin","calcMargins","width","left","right","height","top","bottom","select","html","append","attr","createXScale","createYScale","colorScale","createColorScale","data","scaleBand","domain","keys","range","padding","scaleLinear","max","values","nice","scaleSequential","length","interpolator","interpolateViridis","cumulativeEventsData","call","axisBottom","selectAll","style","calcXLabelFontSize","createXAxisLabel","text","calcLabelFontSize","axisLeft","ticks","createYAxisLabel","entries","join","d","i","key","value","bandwidth","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as d3 from \"d3\";\n\nexport default class CommonReasonsForFailureChart extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.GET_EVENTS_FOR_USER_URL = process.env.REACT_APP_BACKEND_URL + \"/users/events\";\n        this.GET_REASONS_URL = process.env.REACT_APP_BACKEND_URL + \"/events/:eventid/reasons\";\n\n        this.chartContainer = React.createRef();\n\n        this.state = {\n            reasonsData: [],\n            chartWidth: 400\n        }\n    }\n\n    componentDidMount() {\n        this.loadEvents();\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n\n        this.setState({\n            chartWidth: this.chartContainer.current.offsetWidth\n        });\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n    componentDidUpdate() {\n        this.clearOldChart();\n        this.createChart();\n    }\n\n    updateDimensions() {\n        this.setState({\n            chartWidth: this.chartContainer.current.offsetWidth\n        });\n    }\n\n    loadEvents() {\n        fetch(this.GET_EVENTS_FOR_USER_URL, {\n            credentials: 'include'\n        })\n            .then(this.checkStatus)\n            .then((response) => {\n                return response.json();\n            })\n            .then((responseJSON) => {\n                this.getAllReasonsForAllEvents(responseJSON);\n            })\n            .catch(this.displayError);\n    }\n\n    async getAllReasonsForAllEvents(eventsData) {\n        let reasonsArray = [];\n        for (const event of eventsData) {\n            event.Reasons = await this.fetchReasons(event.EventID);\n            for (const reason of event.Reasons) {\n                reasonsArray.push(reason);\n            }\n        }\n        this.setState({\n            reasonsData: reasonsArray\n        });\n    }\n\n    async fetchReasons(eventid) {\n        return await fetch(this.GET_REASONS_URL.replace(\":eventid\", eventid), {\n            credentials: 'include',\n        })\n            .then(this.checkStatus)\n            .then((response) => {\n                return response.json()\n            })\n            .catch(this.displayError);\n    }\n\n    createChart() {\n        let chartData = this.parseEventsData();\n        let chartDimensions = this.calculateChartDimensions();\n        let chart = this.createChartElement(chartDimensions);\n        let scales = this.calculateScales(chartData, chartDimensions);\n\n        this.createXAxis(chart, chartData, chartDimensions, scales.xScale);\n        this.createYAxis(chart, chartData, chartDimensions, scales.yScale);\n        this.createBars(chart, scales, chartData);\n    }\n\n    parseEventsData() {\n        let reasonsData = this.state.reasonsData;\n\n        reasonsData = reasonsData.reduce((acc, cum) => {\n            if (acc[cum.ReasonName]) {\n                acc[cum.ReasonName] += 1;\n            } else {\n                acc[cum.ReasonName] = 1;\n            }\n            return acc;\n        }, {});\n\n        return reasonsData;\n    }\n\n    calculateChartDimensions() {\n        let margin = this.calcMargins();\n        let width = this.state.chartWidth - margin.left - margin.right\n\n        let height = width * .75 - margin.top - margin.bottom;\n        if (this.state.chartWidth < 500) {\n            height = width * 1.2 - margin.top - margin.bottom;\n        }\n\n        return {\n            width: width,\n            height: height,\n            margin: margin\n        }\n    }\n\n    calcMargins() {\n        if (this.state.chartWidth < 500) {\n            return { top: 10, right: 60, bottom: 90, left: 45 };\n        }\n        return { top: 10, right: 60, bottom: 120, left: 60 };\n    }\n\n    clearOldChart() {\n        d3.select(\"#failureReasonsChart\").html(\"\");\n    }\n\n    createChartElement(chartDimensions) {\n        return d3.select(\"#failureReasonsChart\")\n            .append(\"svg\")\n            .attr(\"width\", chartDimensions.width + chartDimensions.margin.left + chartDimensions.margin.right)\n            .attr(\"height\", chartDimensions.height + chartDimensions.margin.top + chartDimensions.margin.bottom)\n            .append(\"g\")\n            .attr(\"transform\",\n                \"translate(\" + chartDimensions.margin.left + \",\" + chartDimensions.margin.top + \")\");\n    }\n\n    calculateScales(chartData, chartDimensions) {\n        let xScale = this.createXScale(chartData, chartDimensions);\n        let yScale = this.createYScale(chartData, chartDimensions);\n        let colorScale = this.createColorScale(chartData);\n\n        return {\n            xScale: xScale,\n            yScale: yScale,\n            colorScale: colorScale\n        }\n    }\n\n    createXScale(data, chartDimensions) {\n        return d3.scaleBand()\n            .domain(d3.keys(data))\n            .range([0, chartDimensions.width])\n            .padding(0.1);\n    }\n\n    createYScale(data, chartDimensions) {\n        return d3.scaleLinear()\n            .domain([0, d3.max(d3.values(data)) + 1]).nice()\n            .range([chartDimensions.height, 0]);\n    }\n\n    createColorScale(data) {\n        return d3.scaleSequential()\n                    .domain([0, d3.keys(data).length])\n                    .interpolator(d3.interpolateViridis);\n    }\n\n    createXAxis(chart, cumulativeEventsData, chartDimensions, xScale) {\n        chart.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + chartDimensions.height + \")\")\n            .call(d3.axisBottom(xScale))\n            .selectAll(\"text\")\n            .style(\"text-anchor\", \"end\")\n            .attr(\"dx\", \"-.8em\")\n            .attr(\"dy\", \".15em\")\n            .attr(\"font-size\", this.calcXLabelFontSize())\n            .attr(\"transform\", \"rotate(-65)\");\n\n        this.createXAxisLabel(chart, chartDimensions);\n    }\n\n    calcXLabelFontSize() {\n        if (this.state.chartWidth < 500) {\n            return \"10px\";\n        }\n        return \"14px\";\n    }\n\n    createXAxisLabel(chart, chartDimensions) {\n        chart.append(\"text\")\n            .attr(\"transform\",\n                \"translate(\" + (chartDimensions.width / 2) + \" ,\" +\n                (chartDimensions.height + chartDimensions.margin.top + chartDimensions.margin.bottom - 24) + \")\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Reason\")\n            .attr(\"font-size\", this.calcLabelFontSize());\n    }\n\n    createYAxis(chart, chartData, chartDimensions, yScale) {\n        chart.append(\"g\")\n            .call(d3.axisLeft(yScale).ticks(d3.max(d3.values(chartData))+ 1))\n\n        this.createYAxisLabel(chart, chartDimensions);\n    }\n\n    createYAxisLabel(chart, chartDimensions) {\n        chart.append(\"text\")\n            .attr(\"transform\", \"rotate(-90)\")\n            .attr(\"y\", 0 - chartDimensions.margin.left)\n            .attr(\"x\", 0 - (chartDimensions.height / 2))\n            .attr(\"dy\", \"1em\")\n            .style(\"text-anchor\", \"middle\")\n            .text(\"Occurences\")\n            .attr(\"font-size\", this.calcLabelFontSize());\n    }\n\n    calcLabelFontSize() {\n        if (this.state.chartWidth < 500) {\n            return \"10px\";\n        }\n        return \"16px\";\n    }\n\n    createBars(chart, scales, data) {\n        chart.append(\"g\")\n            .selectAll(\"rect\")\n            .data(d3.entries(data))\n            .join(\"rect\")\n            .attr(\"x\", (d, i) => scales.xScale(d.key))\n            .attr(\"y\", d => scales.yScale(d.value))\n            .attr(\"height\", d => scales.yScale(0) - scales.yScale(d.value))\n            .attr(\"width\", scales.xScale.bandwidth())\n            .attr(\"fill\", (d, i) => scales.colorScale(i));\n    }\n\n    render() {\n        return (\n            <div ref={this.chartContainer} className=\"card-body\">\n                <h5 className=\"card-title\">Most Common Reasons for Failure</h5>\n                <div className=\"d-flex justify-content-center\" id=\"failureReasonsChart\"></div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}